=========================================================================
Larryâ€™s wack tests - no warranty(sp?) implied or otherwise
Usage of these tests contractually obliges you to buy me coffee and lunch.
Thanks!!
=========================================================================

### importing function to be tested
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [[1, 2, 3],[4, 5, 6]]

# input of standard matrix and div = integer
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# input of standard matrix and div = float
>>> print(matrix_divided(matrix, 1.5))
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

# print the matrix
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

# input of div = 'string'
>>> print(matrix_divided(matrix, "Hi"))
Traceback (most recent call last):
            ...
TypeError: div must be a number

# input of div = 0
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
            ...
ZeroDivisionError: division by zero

# create asymmetrical matrix
>>> matrix_oblong = [[1, 2, 3],[4, 6]]

# test above asymmetrical matrix
>>> print(matrix_divided(matrix_oblong, 2))
Traceback (most recent call last):
             ...
TypeError: Each row of the matrix must have the same size

# create matrix containing a string,
>>> matrix_w_string = [[1, 'hi', 2], [5, 7, 8]]

# input of new matrix that includes strings
>>> print(matrix_divided(matrix_w_string, 6))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is None
>>> print(matrix_divided(None, 2))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix where one row contains booleans
>>> matrixTF = [[True, False], [1, 0]]

>>> print(matrix_divided(matrixTF, 2))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# no arguments
>>> print(matrix_divided())
Traceback (most recent call last):
        ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# extra args
>>> print(matrix_divided(matrix, 2, "well hello there"))
Traceback (most recent call last):
        ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

# True is passed instead of matrix
>>> print(matrix_divided(True, 2))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

======================================
End of wack tests
======================================

